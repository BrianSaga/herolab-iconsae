<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- This file contains the assortment of subskills for the game system. Note that each
      skill is linked to an associated attribute for the character. This linkage allows
      the value of the skill to easily incorporate the effects of the linked attribute
      via a script on the component.
-->

<document signature="Hero Lab Data">

  <!-- Power Option  -->
  <thing
    id="optDenRay"
    name="Density Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You increase the targetâ€™s density.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

  <!-- Power Option  -->
  <thing
    id="optGroRay"
    name="Growth Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You enlarge the target.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

  <!-- Power Option  -->
  <thing
    id="optInvRay"
    name="Invisibility Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You make the target invisible.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

  <!-- Power Option  -->
  <thing
    id="optShrRay"
    name="Shrinking Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You shrink the target.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

  <!-- Power Option  -->
  <thing
    id="optTraRay"
    name="Transforming Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You transform the target into a different shape or substance.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

  <!-- Power Option  -->
  <thing
    id="optPhaRay"
    name="Phasing Ray"
    compset="PowerOpt"
    isunique="yes"
    description="You make the target intangible.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltRay"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>  
	
 <!-- Power Option  -->
  <thing
    id="optRemUnc"
    name="Remain unconscious"
    compset="PowerOpt"
    isunique="yes"
    description="Your Affliction causes a target reduced to 0 Stamina to remain unconscious (like a major stunning outcome).">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAfflict"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>
	
	<!-- Power Option  -->
  <thing
    id="optLoseStr"
    name="Lose Strength levels"
    compset="PowerOpt"
    isunique="yes"
    description="Your Affliction causes a target reduced to 0 Stamina to begin losing Strength levels (like a major killing outcome).">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAfflict"/>
	
    <!-- Each Bonus must be costed to account for the HP multiplier 
    <eval index="1" phase="Traits" priority="1500">
      <before name="Calc resLeft"/>
      <after name="Bound trtUser"/><![CDATA[

      ~adjust the resource appropriately
	~ 	  var mod as number
	  
	~ 	  mod = tagvalue[FCMod.?]
	~ 	  if (field[usrIsCheck].value <> 0) then
	~ 		mod += 1
	~ 		perform delete[FCMod.?]
	~ 		perform assignstr["FCMod." & mod]
	~  endif
	
      ]]></eval>	
	  -->
    </thing>

	<!-- Alt Form Energy Option  -->
  <thing
    id="optEnergy"
    name="Energy Form"
    compset="PowerOpt"
    isunique="yes"
    description="You become a coherent field of energy (see Energy Control for some possibilities). You gain Flight at your power level and Immunity to Physical Attacks but you have no Strength and automatically fail Strength tests to touch or affect physical objects. Attacks affecting your type of energy still affect you. You can acquire Energy Control of the same type as your form as an extra.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltForm"/>
	
	<bootstrap thing="disFlight">
		<assignval field="livename" value="Energy Form: Flight"/>
	</bootstrap>
	<bootstrap thing="disResist">
		<assignval field="livename" value="Energy Form: Resistance"/>
	</bootstrap>

    </thing>	
	
	<!-- Alt Form EXPLOSIVE FORM Option  -->
  <thing
    id="optExplos"
    name="Explosive Form"
    compset="PowerOpt"
    isunique="yes"
    description="You can make your body explode! Make a power level test against the Coordination of everyone within close distance, reading the results as a blasting or shooting test (choose one when you take this power). You then reform at the start of the next page. Until then you are Immune to Damage but unable to affect the physical world. You can delay reforming for up to your power level in pages and reform anywhere within extended range of where you exploded. As an extra, you can teleport after exploding, reforming some distance further away (see Teleportation, p. 120).">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltForm"/>
	
	<bootstrap thing="disBlast">
		<assignval field="livename" value="Explosive Form: Blast"/>
	</bootstrap>
	<bootstrap thing="disResist">
		<assignval field="livename" value="Explosive Form: Resistance"/>
	</bootstrap>
    </thing>	
	
	<!-- Alt Form FLUID FORM  FORM Option  -->
  <thing
    id="optFluid"
    name="Fluid Form"
    compset="PowerOpt"
    isunique="yes"
    description="You transform into a fluid form, able to flow like water through cracks and other small spaces. You might be a liquid like water or a mass of fine particles like dust or sand, or tiny insects or robots. You gain Damage Resistance and Stretching equal to your power level.">
    <!-- If checkbox selection is needed, make sure the compset includes "UserSelect"
          component and define this field appropriately.-->

	<tag group="OnPower" tag="powAltForm"/>
	
	<bootstrap thing="disBlast">
		<assignval field="livename" value="Explosive Form: Blast"/>
	</bootstrap>
	<bootstrap thing="disResist">
		<assignval field="livename" value="Explosive Form: Resistance"/>
	</bootstrap>
    </thing>

 
</document>
